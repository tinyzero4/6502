PORTB = $6000
PORTA = $6001
DDRB = $6002
DDRA = $6003

value = $0200
mod10 = $0202
message = $0204
counter = $020a

E  = %10000000
RW = %01000000
RS = %00100000

  .org $8000

reset:
  ldx #$ff
  TXS
  cli

  lda #%11111111 ; Set all pins on port B to output
  sta DDRB
  lda #%11100000 ; Set top 3 pins on port A to output
  sta DDRA

  lda #%00111000 ; Set 8-bit mode; 2-line display; 5x8 font
  jsr lcd_instruction
  lda #%00001110 ; Display on; cursor on; blink off
  jsr lcd_instruction
  lda #%00000110 ; Increment and shift cursor; don't shift display
  jsr lcd_instruction
  lda #$00000001 ; Clear display
  JSR lcd_instruction
  
  LDA #0
  sta counter
  sta counter + 1
  
loop: 
 lda #$00000010
 jsr lcd_instruction
 
 lda #0
 sta message
 
 sei
 lda counter
 sta value
 lda counter + 1
 sta value + 1
 cli

divide:
  lda #0
  sta mod10
  sta mod10 + 1
  clc

  ldx #16
divloop:
  rol value
  rol value + 1
  rol mod10
  ROL mod10 + 1
  
  SEC
  LDA mod10
  SBC #10
  TAY
  LDA mod10 + 1
  SBC #0
  BCC ignore_result
  STY mod10
  STA mod10 + 1
  
ignore_result:
  DEX
  BNE divloop
  ROL value
  rol value + 1
  
  LDA mod10
  CLC
  ADC #"0"
  JSR push_char
  
  LDA value
  ORA value + 1
  BNE divide
  
  ldx #0
print:
  lda message,x
  beq loop
  jsr print_char
  inx
  jmp print  
  
number: .word 1729

push_char:
 PHA
 LDY #0
 
char_loop: 
 LDA message, y
 TAX
 PLA
 STA message, y
 INY
 TXA 
 PHA
 BNE char_loop
 
 PLA
 STA message, y
 
 rts

lcd_wait:
  pha
  lda #%00000000  ; Port B is input
  sta DDRB
lcdbusy:
  lda #RW
  sta PORTA
  lda #(RW | E)
  sta PORTA
  lda PORTB
  and #%10000000
  bne lcdbusy

  lda #RW
  sta PORTA
  lda #%11111111  ; Port B is output
  sta DDRB
  pla
  rts

lcd_instruction:
  jsr lcd_wait
  sta PORTB
  lda #0         ; Clear RS/RW/E bits
  sta PORTA
  lda #E         ; Set E bit to send instruction
  sta PORTA
  lda #0         ; Clear RS/RW/E bits
  sta PORTA
  rts

print_char:
  jsr lcd_wait
  sta PORTB
  lda #RS         ; Set RS; Clear RW/E bits
  sta PORTA
  lda #(RS | E)   ; Set E bit to send instruction
  sta PORTA
  lda #RS         ; Clear E bits
  sta PORTA
  rts

nmi:
  rti
irq:
  INC counter
  BNE exit_irq
  inc counter + 1
exit_irq:
  rti

  .ORG $fffa
  .word nmi
  .word reset
  .word irq